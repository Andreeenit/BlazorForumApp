@page "/register"
@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject NavigationManager Navigation

<h3>Register</h3>
<EditForm Model="registerModel" OnValidSubmit="HandleRegister">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label>Full Name</label>
        <InputText @bind-Value="registerModel.FullName" class="form-control" />
    </div>
    <div class="mb-3">
        <label>Email</label>
        <InputText @bind-Value="registerModel.Email" class="form-control" />
    </div>
    <div class="mb-3">
        <label>Password</label>
        <InputText @bind-Value="registerModel.Password" type="password" class="form-control" />
    </div>
    <button type="submit" class="btn btn-success">Register</button>
</EditForm>

@if (ErrorMessage is not null)
{
    <p class="text-danger">@ErrorMessage</p>
}

@code {
    private RegisterModel registerModel = new();
    private string? ErrorMessage;

    private async Task HandleRegister()
    {
        var user = new ApplicationUser
            {
                UserName = registerModel.Email,
                Email = registerModel.Email,
                FullName = registerModel.FullName
            };

        var result = await UserManager.CreateAsync(user, registerModel.Password);
        if (result.Succeeded)
        {
            await SignInManager.SignInAsync(user, isPersistent: false);
            Navigation.NavigateTo("/");
        }
        else
        {
            ErrorMessage = string.Join(" ", result.Errors.Select(e => e.Description));
        }
    }

    private class RegisterModel
    {
        public string FullName { get; set; } = string.Empty;
        public string Email { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }
}
